services:
  postgres:
    image: postgres:17-alpine
    container_name: postgres-auto
    restart: unless-stopped
    environment:
      TZ: America/Sao_Paulo
      LANG: C.UTF-8
      LC_ALL: C.UTF-8
    env_file:
      - .env
    volumes:
      - ./db/data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      # Use the actual postgres user configured above
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-gps} -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backup:
    build:
      context: ./backup
      dockerfile: Dockerfile
    image: pg-backup:local
    container_name: pg-backup
    restart: "no"
    depends_on:
      - postgres
    volumes:
      - ./db/backups:/backups
    environment:
      PGPASSWORD: ${POSTGRES_PASSWORD}
      PGUSER: ${POSTGRES_USER:-gps}
      PGHOST: ${POSTGRES_HOST:-postgres}
      BACKUP_RETAIN: ${BACKUP_RETAIN:-7}

      # S3/R2 config
      S3_ENABLED: ${S3_ENABLED:-true}
      S3_BUCKET: ${R2_BUCKET_NAME:-my-r2-bucket}
      S3_ENDPOINT: ${R2_ENDPOINT:-https://<account_id>.r2.cloudflarestorage.com}
      S3_PREFIX: ${R2_PREFIX:-backups}
      S3_REGION: ${R2_REGION:-auto}
      AWS_ACCESS_KEY_ID: ${R2_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${R2_SECRET_ACCESS_KEY}
      ENV: ${ENV:-dev}
    entrypoint: ["/usr/local/bin/entrypoint.sh"]

networks:
  default:
    name: ${NETWORK_NAME:-mynetwork}
    external: true